// The function NonADE takes a ring R and a homogeneous polynomial in three
// variables F of even degree d with coefficients in R,
// and it returns the non-ADE singular R-points of the projective
// surface S  defined as the double cover of IP^2  ramified above the curve
// defined by F.

function NonADE(R,F)

A:=BaseRing(R);
d:=Degree(F);
dd:=Numerator(d/2);
PP<x,y,z,w>:=WeightedProjectiveSpace(A,[1,1,1,dd]);

FF:=w^2-Evaluate(F,[x,y,z]);
S:=Surface(PP,FF);
SingS:=SingularSubscheme(S);
if Dimension(SingS) gt 0 then
  "The surface has non isolated singularities";
  return(0);
end if;

SP:=[];

Sx:=AffinePatch(S,4);
SxSP:=SingularPoints(Sx);
for P in SxSP do
  if not IsSimpleSurfaceSingularity(P) then
    Append(~SP,S!P);
  end if;
end for;



Sy:=AffinePatch(S,3);
SySP:=SingularPoints(Sy);
for P in SySP do
  if not IsSimpleSurfaceSingularity(P) then
    Append(~SP,S!P);
  end if;
end for;

Sz:=AffinePatch(S,2);
SzSP:=SingularPoints(Sz);
for P in SzSP do
   if not IsSimpleSurfaceSingularity(P) then
    Append(~SP,S!P);
  end if;
end for;

if #SP gt 0 then
  return SP;
else
  return SP;
end if;

end function;
